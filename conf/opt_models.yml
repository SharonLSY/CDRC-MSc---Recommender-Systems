type: bayopt # single|window, maybe add opt
key: opt_models #added to the csv names
evaluation: evaluation #evaluation|evaluation_last|evaluation_multiple
data:
  name: test #added in the end of the csv names
  folder: ./data/prepared/14072021/
  prefix: test
  #opts: {sessions_test: 100}

results:
  folder: results/opt_models/

metrics:
- class: accuracy.MRR
  length: [20]
- class: accuracy.HitRate
  length: [10,20]
- class: coverage.Coverage
  length: [20]
- class: popularity.Popularity
  length: [20]
- class: time_memory_usage.Time_usage_training
- class: time_memory_usage.Time_usage_testing
- class: time_memory_usage.Memory_usage

optimize:
  class: accuracy.MRR
  length: [10]
  iterations: 100 #optional

algorithms:
- class: gru4rec.gru4rec.GRU4Rec
  params: {}
  params_opt:
    loss: ['bpr-max', 'top1-max']
    final_act: ['elu-0.5','linear']
    dropout_p_hidden: {from: 0.0, to: 0.9, type: float}
    momentum: {from: 0.0, to: 0.9, type: float32}
    learning_rate: [{from: 0.1, to: 0.5, type: float32}
    constrained_embedding: [True,False]
  key: gru4rec
- class: STAMP.model.STAMP.Seq2SeqAttNN
  params: {}
  params_opt:
    n_epochs: {from: 10, to: 100, type: int32}
    decay_rate: {from: 0.0, to: 0.9, type: float32}
    init_lr: {from: 0.0001, to: 0.01, type: float32}
  key: stamp
- class: slist.SLIST
  params: {reg: 10}
  params_opt:
    alpha: {from: 0.1, to: 0.9, type: float32}
    direction: ['sr','part','all']
    train_weight: {from: 0.125, to: 8, type: float32}
    predict_weight: {from: 0.125, to: 8, type: float32}
    session_weight: {from: 1, to: 300, type: int32}
  key: slist
- class: stan.STAN
  params: {k: 500, sample_size: 2500}
  params_opt:
    #k: {from: 200, to: 2000, in: 10, type: int32}
    lambda_spw: {from: 0.125, to: 8, type: float32}
    lambda_snh: {from: 1, to: 300, type: int32}
    lambda_inh: {from: 0.125, to: 8, type: float32}
  key: stan
